##: Build stage
FROM rust:bookworm AS builder

RUN dpkg --add-architecture arm64
RUN apt update
RUN apt install -y g++-aarch64-linux-gnu
RUN apt install -y libsqlite3-dev:arm64 libssl-dev:arm64
RUN rustup target add aarch64-unknown-linux-gnu

ARG CC=aarch64-linux-gnu-gcc
ARG CXX=aarch64-linux-gnu-g++
ARG PKG_CONFIG_SYSROOT_DIR=/usr/lib/aarch64-linux-gnu/
ARG CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc

COPY helipad /opt/helipad
WORKDIR /opt/helipad

RUN cargo build --release --target=aarch64-unknown-linux-gnu

##: Bundle stage
FROM --platform=linux/arm64 debian:bookworm-slim AS runner

USER root

RUN apt-get update && apt-get install -y apt-utils ca-certificates openssl sqlite3 tini

COPY ./docker_entrypoint.sh /usr/local/bin/docker_entrypoint.sh
RUN chmod +x /usr/local/bin/*.sh

RUN mkdir /opt/helipad
WORKDIR /opt/helipad

COPY --from=builder /opt/helipad/target/aarch64-unknown-linux-gnu/release/helipad .
COPY --from=builder /opt/helipad/webroot ./webroot
COPY --from=builder /opt/helipad/helipad.conf .

RUN useradd -u 1000 helipad

EXPOSE 2112/tcp

ENTRYPOINT ["/usr/local/bin/docker_entrypoint.sh"]